# 工作流名称
name: JMBQ Build

# 触发器：使用手动触发，并定义输入参数
on:
  workflow_dispatch:
    inputs:
      region:
        description: '选择区服'
        required: true
        type: choice
        options:
          - 'EN'
          - 'JP'
          - 'KR'
          - 'TW'
          - 'CN'
          - 'OTHER'
      other_bundle_id:
        description: '区服名称或者包名（请填入全英文，且不包含空格，例如 百度服 请填入 baidu 即可）'
        required: false
        type: string
        default: ''
      other_download_url:
        description: 'APK下载链接，务必填入直链，最好使用国外云盘的直链，例如Google云盘'
        required: false
        type: string
        default: ''

# 定义一个任务（Job）
jobs:
  build:
    # 运行此任务的操作系统环境
    runs-on: ubuntu-latest
    # 授予任务对仓库内容的写入权限，以便创建和上传 Release 资产
    permissions:
      contents: write

    # 任务步骤
    steps:
      # 步骤1：检出仓库代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 步骤2：确定 Bundle ID 和下载链接
      - name: Determine Bundle ID and Download URL
        id: bundle_config
        run: |
          case "${{ github.event.inputs.region }}" in
          "EN")
            echo "BUNDLE_ID=com.YoStarEN.AzurLane" >> $GITHUB_ENV
            ;;
          "JP")
            echo "BUNDLE_ID=com.YoStarJP.AzurLane" >> $GITHUB_ENV
            ;;
          "KR")
            echo "BUNDLE_ID=kr.txwy.and.blhx" >> $GITHUB_ENV
            ;;
          "TW")
            echo "BUNDLE_ID=com.hkmanjuu.azurlane.gp" >> $GITHUB_ENV
            ;;
          "CN")
          if [ -z "${{ github.event.inputs.other_download_url }}" ]; then
              echo "错误：在区服选择CN时需手动填入APK下载地址,链接必须为直链！"
              exit 1
            fi

            echo "BUNDLE_ID=com.bilibili.azurlane" >> $GITHUB_ENV
            echo "DOWNLOAD_URL=${{ github.event.inputs.other_download_url }}" >> $GITHUB_ENV
            ;;
          "OTHER")
            # 验证输入参数
            if [ -z "${{ github.event.inputs.other_bundle_id }}" ]; then
              echo "错误：在区服选择other时需手动填入包名或易于分辨的英文名称！"
              exit 1
            fi
            if [ -z "${{ github.event.inputs.other_download_url }}" ]; then
              echo "错误：在区服选择other时需手动填入APK下载地址,链接必须为直链！"
              exit 1
            fi
            
            echo "BUNDLE_ID=other" >> $GITHUB_ENV
            echo "ACTUAL_BUNDLE_ID=${{ github.event.inputs.other_bundle_id }}" >> $GITHUB_ENV
            echo "DOWNLOAD_URL=${{ github.event.inputs.other_download_url }}" >> $GITHUB_ENV
            ;;
          esac
          echo "REGION=${{ github.event.inputs.region }}" >> $GITHUB_ENV
        shell: bash
      
      # 步骤3：设置 Java JDK
      - name: Setup Java JDK
        uses: actions/setup-java@v3.3.0
        with:
          java-version: "17"
          distribution: "adopt"

      # 步骤4：设置 Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      # 步骤5：安装 build-tools
      - name: Install build-tools
        run: |
          yes | sdkmanager --install "build-tools;35.0.0"

      # 步骤6：构建 APK 文件
      - name: Build JMBQ APK
        run: |
          if [ "${{ env.BUNDLE_ID }}" = "other" ]; then
            ./build_apk.sh other "${{ env.ACTUAL_BUNDLE_ID }}" "${{ env.DOWNLOAD_URL }}"
          elif [ "${{ env.BUNDLE_ID }}" = "com.bilibili.azurlane" ]; then
            ./build_apk.sh "${{ env.BUNDLE_ID }}" "${{ env.DOWNLOAD_URL }}"
          else
            ./build_apk.sh "${{ env.BUNDLE_ID }}"
          fi

      # 步骤7：分卷压缩 APK
      - name: Create split archives
        run: |
          # 查找生成的 APK 文件
          if [ "${{ env.BUNDLE_ID }}" = "other" ]; then
            ACTUAL_ID="${{ env.ACTUAL_BUNDLE_ID }}"
          else
            ACTUAL_ID="${{ env.BUNDLE_ID }}"
          fi
          
          APK_FILE=$(find build -name "${ACTUAL_ID}*.apk" -print -quit)
          
          if [ -z "$APK_FILE" ]; then
            echo "Error: No APK file found in build directory!"
            # 尝试查找任何APK文件
            APK_FILE=$(find build -name "*.apk" -print -quit)
            if [ -z "$APK_FILE" ]; then
              exit 1
            fi
            echo "Found APK file: $APK_FILE"
          fi
          
          echo "Creating split archives for: $APK_FILE"

          7z a -v800M "${{ env.BUNDLE }} JMBQ.7z" "$APK_FILE"
          
          echo "Generated split files:"
          ls -lh "${{ env.BUNDLE }} JMBQ.7z"*

      # 步骤8：创建 Release 并上传所有分卷文件
      - name: Release and Upload Assets
        uses: ncipollo/release-action@v1
        with:
          # 使用 `tag` 参数定义 Release 的标签
          tag: "${{ env.REGION }}-v${{ env.VERSION }}"
          # 使用 `name` 参数定义 Release 的名称
          name: "${{ env.BUNDLE }} JMBQ Release v${{ env.VERSION }}"
          # `artifacts` 参数支持通配符，可以直接匹配所有分卷文件
          artifacts: "${{ env.BUNDLE }} JMBQ.7z.*"
          # 允许更新已存在的 Release
          allowUpdates: true
          # 添加 Release 说明
          body: |
            区服: ${{ env.REGION }}
            包名: ${{ env.BUNDLE }}
            版本: ${{ env.VERSION }}
            构建日期: ${{ github.event.repository.updated_at }}
            
            **安装说明:**
            1. 下载所有以 7z.00* 结尾的文件（有些时候有多个，有些时候只有一个，依据客户端大小决定）
            2. 解压时只需要选择"XXXXX JMBQ.7z.001"解压即可`
            3. 在解压后的文件夹中找到apk文件并安装